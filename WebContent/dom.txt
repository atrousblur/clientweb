DOM (Document Object Model)
: 문서를 접근하는 방법을 표준으로 정의해 놓은 것
플랫폼이나 언어에 상관없이 컨텐츠 (문자열, 이미지, 양식태그 등 웹 문서를 구성하는 구성요소) 구조를
동적으로 업데이트하고 액세스 할 수 있도록 W3C에서 표준으로 정의해 놓은 문서 접근방법 (html, xml 모두 적용)
																			ㄴ World Wide Web Consortium 웹 표준화를 위한 국제 표준화기구
																				브라우저 내부에서 html이나 css명세에 따라서 html을 해석해서 표시하는데
																				이 명세를 W3C에서 정한다.
																			

1) DOM의 구성요소
	- element : html 문서를 구성하는 컨텐츠
	- attribute : 태그 내부에서 정의되어 있는 속성
	- document : DOM객체의 가장 상위의 객체
	- text : 태그와 태그 사이에 입력한 문자열 (공백도 문자열 객체로 인식)

2) DOM의 속성
	- nodeName : 노드의 이름 (엘리먼트와 동일)
	- nodeValue : 노드의 값
	- childNodes : 하나의 노드 밑에 형성된 자식 노드들
								List의 형태로 반환 - 배열로 관리, HTML문서에 정의된 순서대로 배열에 저장된다.
	- firstChild : 첫번째 자식노드
	- lastChild : 마지막 자식노드
	
3) DOM에서 사용하는 메소드
	- getElementById("id명") : id로 정의된 객체를 반환. 단일객체에 동적작업을 수행
	- getElementByTagName("태그명") : 태그에 해당하는 모든 객체를 노드 List의 형태로 반환. 배열로 관리
	- getAttribute("속성명") : 속성에 정의되어 있는 값이 리턴
	- setAttribute("속성명", "값") : 특정객체의 속성을 정의한 값으로 설정하여 변경
	- appendChild("노드명") : 해당 노드를 삽입
		① 삽입될 노드를 생성 - createElement or createTextNode
		② 삽입될 위치 노드를 구하기
		③ 노드를 추가
		
	- insertBefore(노드명, target노드)
								ㄴ추가될 노드   ㄴ삽입될 위치의 노드 - 형제노드
		: appendChild와 동일하게 동작
		  appendChild는 맨 뒤에 삽입되지만 insertBefore는 중간에 삽입될 위치를 정할 수 있다.
		  삽입될 위치에 대한 정보가 target노드에 추가된다.
		  	
	- createElement("엘리먼트")  : 엘리먼트를 생성
	- createTextNode() : 텍스트노드를 생성
	- removeChild(노드명) : 노드를 삭제
		: 부모노드에서 삭제할 노드를 찾아서 삭제하겠다.